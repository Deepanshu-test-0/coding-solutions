#include<bits/stdc++.h>
using namespace std;
#define N 1000000

bool ar[ N + 1 ];
long long int ars[N + 1];

bool check( int  n )
{
    stack <int> s;
    int sum=0;
    int ct = 0;
    int temp = n;
    
    while(temp>0)
    {
        s.push( temp%10 );
        if ( !s.top() ) return 0;
        ct++;
        temp /= 10;
    }
    
    while(--ct)
    {
        sum += s.top()*pow( 10, ct); s.pop();
        // cout<<"to be subtracted"<<sum<<'\n';
        temp = n - sum;
        // cout<<temp<<'\n';
        if ( ar[temp] ) return 0;
    }
    
    return 1;
}



int main()
{
    
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    
    long long int i,j;
    
    ar[0] = 1;
    ar[1] = 1;
    
    long long int ct = 0;
    
    for( i = 2; i<=N; i++)
    {
        ars[i] = ars[i-1];
        
        if ( ar[i] == 0 )
        {
            if ( check(i) ) {ars[i] += 1; }
            
            for( j= i*i; j<=N ; j+=i )
            {
                ar[j] = 1;
            }
        }
    }
    
    long long int t,n;
    cin>>t;
    
    while(t--)
    {
        cin>>n;
        cout<<ars[n]<<'\n';
    }
    
    // for(int i=0;i<10;i++)
    //   cout<<check(i);
    // cout<<check(3);
    
    
    // cout<<check( 46326047 );
 
}
